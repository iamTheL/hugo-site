<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Padmanabhan Manoharan</title><link>https://padmano.github.io/</link><description>Recent content on Padmanabhan Manoharan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Sun, 28 Aug 2022 20:15:12 +0530</lastBuildDate><atom:link href="https://padmano.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Micro:Bit Explained</title><link>https://padmano.github.io/posts/micro-bit/micro-bit-explained/</link><pubDate>Sun, 28 Aug 2022 20:15:12 +0530</pubDate><guid>https://padmano.github.io/posts/micro-bit/micro-bit-explained/</guid><description>This post explain what micro:bit has to offer. As soon as I saw a post with rust support for micro:bit I purchased it without any hesitation. So now lets see what this awesome development board has got.
The board is slick with minimal design (according to me).
If the pic looks overwhelming, relax, we are going to decode the components that matter the most as a developer.
Application Processor Our code is executed in the application processor.</description></item><item><title>Spring Boot Series - End Points Definition</title><link>https://padmano.github.io/posts/spring-boot-series/end-points-definition/</link><pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate><guid>https://padmano.github.io/posts/spring-boot-series/end-points-definition/</guid><description>If you are new to this post, this is a continuation of the springboot-series where I am attempting to develop an food delivery app with Spring Boot. Do check it out here.
Web APIs are exposed through REST style over HTTP/HTTPS in our coding example.
Hypertext Transfer Protocol(HTTP) / Hypertext Transfer Protocol Secure(HTTPS) specifies verbs over which data is transferred between a client and server.
Hopefully if you are following up on my series you would have deduced by now that we are setting up an client-server architecture.</description></item><item><title>Spring Boot Series - Food Ordering App</title><link>https://padmano.github.io/posts/spring-boot-series/a-index/</link><pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate><guid>https://padmano.github.io/posts/spring-boot-series/a-index/</guid><description>Spring boot series revolves around designing and developing a food delivery application using Spring Boot framework. The idea here is to share my experience with Spring boot in designing a solution with as many features as possible. All the working components of the application will be listed as a lookup for the entire series in this post.
I will try my best to post it sequentially for a smoother navigation even though each post will be an attempt to be a stand-alone post addressing one feature(technical/functional) at a time.</description></item><item><title>Hello World - Spring Boot</title><link>https://padmano.github.io/posts/spring-boot-series/classical-hello-world/</link><pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate><guid>https://padmano.github.io/posts/spring-boot-series/classical-hello-world/</guid><description>If you are new to this post, this is a continuation of the springboot-series where I am attempting to develop an food delivery app with Spring Boot. Do check it out here.
Classical Hello World application using Spring Boot
Spring boot is one of the popular Spring based Java framework, which under the hood comprises of multiple projects at its core. Spring boot helps to get started with stand-alone web application applications with minimal coding.</description></item><item><title>About Me</title><link>https://padmano.github.io/about/</link><pubDate>Fri, 19 Feb 2021 14:15:11 +0530</pubDate><guid>https://padmano.github.io/about/</guid><description>Padmanabhan here, I browse stackoverflow.com for my living. I work as full time developer at ThoughtWorks where I design and develop interesting solutions across businesses. Most of my experience in building my solutions revolved around the Retail industry and currently ventured into Banking and Finanace.
To mention a few:
Warehouse solution Omnichannel and Store Design Having graduated as an Embedded Systems Engineer automating STUFFS through code still fascinates me. As life has got its own way of presenting itself, I became an Software Engineer.</description></item></channel></rss>